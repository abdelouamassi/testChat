<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1, minimum-scale=1"/>
</head>
<style type='text/css'>
    @font-face {
    font-family: 'Marianne_Regular';
    src: url('/ChatACYMAcomptes/s/sfsites/c/resource/marianneRegular') format('woff');
    }
    
    .embeddedServiceHelpButton .helpButton .uiButton {
        font-size: 1.5em;
        max-width: 25em;
        background-color: #000091;
        font-family: "Marianne_Regular", sans-serif;
    }
    .embeddedServiceHelpButton .helpButton .helpButtonLabel .uiButton:focus {
      outline: 1px solid #000091;
      
    }
    
    .embeddedServiceHelpButton .helpButton .helpButtonEnabled:hover::before, .embeddedServiceHelpButton .helpButton .helpButtonEnabled:focus::before {
    background-color: #000091;

    }

    .embeddedServiceHelpButton .embeddedServiceIcon::before {
    font-size: 1.75em;
    }
    
    body button {
    background: none;
    }
    
    .message {
    background-color: #000091;
    border-style: none;
    border-width: 1px;
    color: #FFFFFF;
    padding: 6px 8px 7px 6px;
    margin: 4px -3px;
    }
    
    .helpButtonEnabled:focus .helpButtonLabel {
    text-decoration: none;
    }
    
    .embeddedServiceSidebarMinimizedDefaultUI {
    background-color: #000091;
    border-color: #000091;
    }

</style>

<script type='text/javascript' src='https://service.force.com/embeddedservice/5.0/esw.min.js'></script>
<script type='text/javascript'>
    var initESW = function(gslbBaseURL) {
    
        let url = '{!$Label.TchatPortSource}';
        let etatConversation = '/';
        let environnement = '/dev';        let sourcePortAffiche = true;
        embedded_svc.settings.displayHelpButton = true; //Or false
        embedded_svc.settings.language = ''; //For example, enter 'en' or 'en-US'

        embedded_svc.settings.defaultMinimizedText = 'Discuter avec un gendarme'; //(affiche par défaut Discuter avec un expert)
        embedded_svc.settings.disabledMinimizedText = 'Aucun agent n\'est disponible'; //(affiche par défaut Agent hors ligne)

        embedded_svc.settings.loadingText = 'Chargement'; //(Defaults to Loading)
        //embedded_svc.settings.storageDomain = 'yourdomain.com'; //(Sets the domain for your deployment so that visitors can navigate subdomains during a chat session)

        // Settings for Chat
        //embedded_svc.settings.directToButtonRouting = function(prechatFormData) {
            // Dynamically changes the button ID based on what the visitor enters in the pre-chat form.
            // Returns a valid button ID.
        //};
        //embedded_svc.settings.prepopulatedPrechatFields = {}; //Sets the auto-population of pre-chat form fields
        //embedded_svc.settings.fallbackRouting = []; //An array of button IDs, user IDs, or userId_buttonId
        //embedded_svc.settings.offlineSupportMinimizedText = '...'; //(Defaults to Contact Us)

        embedded_svc.settings.enabledFeatures = ['LiveAgent'];
        embedded_svc.settings.entryFeature = 'LiveAgent';

        embedded_svc.addEventHandler("onChasitorMessage", function(data) {
        console.log("onChasitorMessage event was fired. liveAgentSessionKey was " + JSON.stringify(data));
        etatConversation = '/mulieu';
        let urlWithKey = url + data.liveAgentSessionKey + etatConversation + environnement ;
        let xhr = new XMLHttpRequest(); xhr.open('GET', urlWithKey); xhr.send();
        
});

        embedded_svc.addEventHandler("onChatEndedByAgent", function(data) {
        console.log("onChatEndedByAgent was fired. liveAgentSessionKey was " + JSON.stringify(data));
        etatConversation = '/fin';
        let urlWithKey = url + data.liveAgentSessionKey + etatConversation + environnement ;
        let xhr = new XMLHttpRequest(); xhr.open('GET', urlWithKey); xhr.send();

});
        embedded_svc.addEventHandler("onChatEndedByChasitor", function(data) {        
        console.log("onChatEndedByChasitor was fired. liveAgentSessionKey was " + JSON.stringify(data));
        etatConversation = '/fin';
        let urlWithKey = url + data.liveAgentSessionKey + etatConversation + environnement ;
        let xhr = new XMLHttpRequest(); xhr.open('GET', urlWithKey); xhr.send();


});

        embedded_svc.addEventHandler("onChatEndedByChatbot", function(data) {        
        console.log("onChatEndedByChatbot was fired. liveAgentSessionKey was " + JSON.stringify(data));
        etatConversation = '/fin';
        let urlWithKey = url + data.liveAgentSessionKey + etatConversation + environnement ;
        let xhr = new XMLHttpRequest(); xhr.open('GET', urlWithKey); xhr.send();
});
        embedded_svc.addEventHandler("onAgentMessage", function(data) {       
        if(sourcePortAffiche){
        console.log("onAgentMessage was fired. liveAgentSessionKey was " + JSON.stringify(data));
        etatConversation = '/debut';
        let urlWithKey = url + data.liveAgentSessionKey + etatConversation + environnement ;
        let xhr = new XMLHttpRequest(); xhr.open('GET', urlWithKey); xhr.send();
        sourcePortAffiche = false;
        } 
});
       embedded_svc.init(
            '{!$Label.applicationURL}', //{!$Label.applicationURL},
            '{!$Label.siteURL}'+'/ChatACYMAcomptes', //{!$Label.siteURL}
             gslbBaseURL,
            '{!$Label.idAcymaComptes}', // specifique et généré  par le tchat {!$Label.idAcymaComptes}
            'Chat_ACYMA_comptes',
            {
                baseLiveAgentContentURL: 'https://c.la1-c1cs-cdg.salesforceliveagent.com/content',
                deploymentId: '{!$Label.deploymentIdAcymaComptes}', // specifique et généré  par le tchat {!$Label.deploymentIdAcymaComptes}
                buttonId: '{!$Label.buttonIdAcymaComptes}', // specifique et généré  par le tchat {!$Label.buttonIdAcymaComptes}
                baseLiveAgentURL: 'https://d.la1-c1cs-cdg.salesforceliveagent.com/chat',
                eswLiveAgentDevName: '{!$Label.eswAcymaComptes}',// specifique et généré  par le tchat {!$Label.eswAcymaComptes}
                isOfflineSupportEnabled: false
            }
        );
    };

    if (!window.embedded_svc) {
        var s = document.createElement('script');
        s.setAttribute('src', '{!$Label.applicationURL}'+'/embeddedservice/5.0/esw.min.js');//{!$label.applicationURL}
        s.onload = function() {
            console.log('1')
        };
        document.body.appendChild(s);
    } else {
        initESW('https://service.force.com');
       //setTimeout(() => {  document.getElementsByClassName('uiButton helpButtonEnabled')[0].click(); }, 2000);
        
    }
</script>
</html>
